
/*

	This file contains generic styling rules applied to multiple different pages on the site

*/

*{
	box-sizing: border-box;
	font-family: ui-sans-serif, system-ui, sans-serif;
	font-feature-settings: normal;
	font-variation-settings: normal;
}

body{
	display: flex;
	position: relative;
	flex-wrap: wrap;
	margin: 0;
	background-color: black;
}

main{
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	flex-basis: 100%;
	
	background-color: /*rgb(220, 200, 200)*/rgb(243 244 246);
}

/*
	A container to hold content meant to be placed at the top of the page.
	Primarily meant to hold a .titleContainer and .secondaryContainer, but can be tweaked to hold additional content such as a .barButton.
	Will automatically set margins of inside objects
*/
.topContent{
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	flex-basis: 100%;
	justify-content: center;
	max-width: 1200px;
	margin: auto;
}

/*
	A container for an h1 that allows for a background image 
	The background image itself will need to be set in the html file
*/
.titleContainer{
	flex-shrink: 1;
	flex-grow: 1;
	
	background-color: rgb(255, 100, 80);
	background-blend-mode: multiply;
	background-repeat: no-repeat;
	background-size: cover;
	
	display: flex;
	justify-content: center;
	align-items: center;
	
	white-space: nowrap
}

.titleContainer h1{
	margin: 0;
	text-align: center;
	
	color: white;
	font-weight: bold;
	font-size: 2.25rem;
}


/* 
	Rules for forms and a container meant to be placed at the top of the page.
	Goes after the .titleContainer and inside the .topContent.
	Typically has an h2 and a p at the top.
*/
.secondaryContainer{
	flex: 1 1 0;
	padding: 1rem;
	
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	align-items: center;
	justify-content: space-evenly;
}

.secondaryContainer>*:not(:last-child){
	margin: 0 0 1rem 0;
}

.secondaryContainer>:last-child{
	margin: 0;
}

.secondaryContainer h2{
	flex: 0 0 100%;
	text-align: center;
}

.secondaryContainer p{
	flex: 0 0 100%;
}

/*
	An option class for .secondaryContainer to make the text larger.
	Should only be used if the container only has an h2 and p.
*/
.bigText{
	justify-content: center;
	text-align: center;
	flex-basis: 45rem;
}
	
.bigText h2{
	font-size: 2rem;
}

.bigText p {
	font-size: 1.5rem;
	line-height: 1.5;
}

form{
	flex: 0 0 80%;
	
	display: flex;
	flex-direction: column;
	align-items: flext-start;
	max-width: 28rem;
}

form *:not(:last-child){
	margin: 0 0 0.5rem 0;
}

form :last-child{
	margin: 0;
}

form *:not(.dropShadowBtn) {
	width: 100%;
}

form textarea{
	height: 5rem;
	resize: none;
	font-size: 0.75rem;
}

/* Basic link styling */
.basicLink {
	color: rgb(150, 100, 80);
}

.basicLink:hover, .basicLink:focus, .basicLink:active {
	color: rgb(120, 80, 60);
}

/* A small button that creates a drop shadow when hovered over*/
.dropShadowBtn{
	margin: 0.5rem;
	width: 100px;
	background-color: rgb(150, 100, 80);
	border: 1px solid black;
	color: white;
	padding-top: 0.25rem;
	padding-bottom: 0.25rem;
	border-radius: 10px;
	text-align: center;
	text-decoration: none;
	
	cursor: pointer;
}

.dropShadowBtn:hover{
	box-shadow: 0.01rem 0.01rem 0.375rem black;
}

/* 
	A button that can be the third item in .topContent.
	A background image can be set in the html file.
*/
.barButton{
	display: flex;
	justify-content: center;
	align-items: center;
	
	color: white;
	background-color: rgb(170, 100, 80);
	background-blend-mode: multiply;
	background-repeat: no-repeat;
	background-size: cover;
	
	padding-left: 1rem;
	padding-right: 1rem;
	width: 10rem;
	min-height: 8rem;
	
	cursor: pointer;
	text-decoration: none;
}

.barButton:hover{
	background-color: rgb(120, 80, 70);
	color: rgb(90, 50, 80);
}

/*
	Container for content that takes up the full width of the page.
	Goes after .topContent
*/
.extra{
	flex-basis: 100%;
	margin-top: 0.5rem;
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
	flex-wrap: wrap;
	max-width: 1200px;
	margin: auto;
}

/* A table that alternates background color every other cell */
#everyOtherTable {
	text-align: center;
	table-layout: fixed;
	width: 100%;
	max-width: 70rem;
	margin-bottom: 2rem;
	margin-left: auto;
	margin-right: auto;
}

#everyOtherTable tr{
	height: 15rem;
}

#everyOtherTable td{
	padding: 0.375rem;
}

#everyOtherTable tr:nth-child(odd) td:nth-child(odd), #everyOtherTable tr:nth-child(even) td:nth-child(even){
	background-color: #FFFFFF;
}

#everyOtherTable tr:nth-child(odd) td:nth-child(even), #everyOtherTable tr:nth-child(even) td:nth-child(odd){
	background-color: #f0f0f0;
}

/*Object for holding download links with attatched images */
#downloads {
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	justify-content: space-evenly;
	margin-bottom: 1rem;
	max-width: 90rem;
	row-gap: 0.5rem;
}

/* Holds one image, a title, and a download link */
.downloadContainer {
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	align-items: center;
	justify-content: center;
	
	flex: 1 1 0;
	margin: 0 0.5rem;
	
	border: 0.125rem grey solid;
	border-radius: 0.5rem;
	
	background-color: rgb(220, 200, 200);
}

/*Classfor images inside a downloadContainer */
.downloadImageHolder {
	flex: 0 0 auto;
	margin: 0.25rem;
	display: flex;
	align-items: center;
}

.downloadImage {
	width: 10rem;
	background-size: cover;
	background-repeat: no-repeat;
	image-rendering: auto;
}

.downloadContainer h3{
	flex-basis: 100%;
	margin-left: 0.5rem;
	margin-right: 0.5rem;
	margin-top: 0.5rem;
	margin-bottom: 0.5rem;
	border-bottom: 2px grey solid;
	text-align: center;
}

.downloadContainer a {
	flex-grow: 1;
	height: 3rem;
	display: flex;
	align-items: center;
	justify-content: center;
	padding: 0.25rem;
}

.downloadContainer p {
	flex: 1 1 auto;
	margin: 0 0.25rem 0.25rem 0.25rem;
}

.downloadContainer span{
	display: block;
	font-size: 0.75rem;
}

.downloadContainer .left{
	text-align: left;
	margin-right: auto;
	margin-bottom: 0.25rem;
}
.downloadContainer .right{
	text-align: right;
	margin-left: auto;
	margin-bottom: 0.25rem;
}

/*
	A section for storing a simple p text block with an h3 label
*/
.basicText {
	max-width: 60rem;
	padding: 0 1rem;
	margin-bottom: 1rem;
	
}

.basicText h3{
	margin: 0;
	border-bottom: 1px rgb(150, 100, 80) solid;
	color: rgb(150, 100, 80);
	text-transform: uppercase;
}

.basicText p {
	margin: 0 0;
}

footer{
	position: absolute;
	bottom: 0px;
	width: 100%;
	background-color: rgb(0,0,0);
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
}

footer *{
	margin: 0;
	color: white;
	line-height: 1.5;
}

footer a{
	text-decoration: underline;
	cursor: pointer;
}

/* Adds spacing to make footer positioned a bit better */
#footerSpacer{
	height: 6rem;
	width: 100%;
	background-color: red;
}

/* Extra rules for a small screen */
@media (max-width:42rem){
	.titleContainer{
		flex-basis: 100%;
		height: 20rem;
	}
	
	.titleContainer h1{
		line-height: 20rem;
	}
	
	.barButton{
		flex-basis: 100%;
		height: 5rem;
	}
	
	#everyOtherTable td{
		height: 10rem;
		display: table-row;
	}
	
	#downloads{
		/*flex-direction: column;*/
	}
	
	.downloadContainer{
		flex-basis: 100%;
	}
}

/* Extra rules for a medium screen */
@media ((min-width:42.001rem) and (max-width:71rem)) {
	.titleContainer{
		flex-basis: 100%;
		height: 30rem;
	}
	
	.titleContainer h1{
		line-height: 30rem;
	}
}

/* Extra rules for a large screen */
@media (min-width:71.001rem) {
	
	main{
		justify-content: center;
	}
	
	.titleContainer{
		max-width: 50rem;
		height: 30rem;
	}
	
	.secondaryContainer{
		flex: 0 0 35rem;
	}
	
	.bigText{
		justify-content: center;
		text-align: left;
	}
	
	.bigText h2{
		text-align: left;
		font-size: 2rem;
	}
	
	.bigText p {
		font-size: 1.5rem;
		line-height: 1.5;
	}
	
}